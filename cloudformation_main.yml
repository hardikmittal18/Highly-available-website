Parameters:
    EnvironmentName:
        Description: An Environment name that will be prefixed to resources
        Type: String
        Default: Myudacity-project-2

    VpcCIDR:
        Description: Please enter the IP range (CIDR notation) for this.
        Type: String
        Default: 10.0.0.0/16
    
    PublicCidr1A:
        Description: public subnet az
        Type: String
        Default: 10.0.1.0/24
    
    PublicCidr1B:
        Description: public subnet az
        Type: String
        Default: 10.0.11.0/24
    
    PrivateCidr1A:
        Description: private subnet az
        Type: String
        Default: 10.0.5.0/24
    
    PrivateCidr1B:
        Description: private subnet az
        Type: String
        Default: 10.0.15.0/24    

Resources:
  myVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
      - Key: Name
        Value: !Ref EnvironmentName

  myInternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: Name
        Value: !Ref EnvironmentName
  
  
  AttachInternetGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref myVPC
      InternetGatewayId: !Ref myInternetGateway


  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref myVPC
      CidrBlock: !Ref PublicCidr1A
      AvailabilityZone: !Select [0, !GetAZs '']
      MapPublicIpOnLaunch: true
      Tags:
      - Key: Name
        Value: !Ref EnvironmentName

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: myVPC
      CidrBlock: !Ref PublicCidr1B
      AvailabilityZone: !Select [1, !GetAZs '']
      MapPublicIpOnLaunch: true
      Tags:
      - Key: Name
        Value: !Ref EnvironmentName

  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: myVPC
      CidrBlock: !Ref PrivateCidr1A
      AvailabilityZone: !Select [0, !GetAZs '']
      Tags:
      - Key: Name
        Value: !Ref EnvironmentName

  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: myVPC
      CidrBlock: !Ref PrivateCidr1B
      AvailabilityZone: !Select [1, !GetAZs '']
      Tags:
      - Key: Name
        Value: !Ref EnvironmentName

  NATGateway1:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt EIPNAT1.AllocationId
      SubnetId: !Ref PublicSubnet1
      Tags:
      - Key: Name
        Value: !Ref EnvironmentName

  
  EIPNAT1:
    DependsOn: AttachInternetGateway
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
  
  NATGateway2:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt EIPNAT2.AllocationId
      SubnetId: !Ref PublicSubnet2
      Tags:
      - Key: Name
        Value: !Ref EnvironmentName
  
  EIPNAT2:
    DependsOn: AttachInternetGateway
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
  

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref myVPC
      Tags:
      - Key: Name
        Value: !Ref EnvironmentName

  DefaultPublicRoute:
    Type: AWS::EC2::Route
    Properties: 
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref myInternetGateway
      RouteTableId: !Ref PublicRouteTable

  PublicRouteAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet1

  PublicRouteAssociation2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet2

  PrivateRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref myVPC
      Tags:
      - Key: Name
        Value: !Ref EnvironmentName

  PrivateRoute1:
    Type: AWS::EC2::Route
    Properties: 
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NATGateway1
      RouteTableId: !Ref PrivateRouteTable1

  PrivateRouteAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: !Ref PrivateRouteTable1
      SubnetId: !Ref PrivateSubnet1

  PrivateRouteTable2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref myVPC
      Tags:
      - Key: Name
        Value: !Ref EnvironmentName

  PrivateRoute2:
    Type: AWS::EC2::Route
    Properties: 
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NATGateway2
      RouteTableId: !Ref PrivateRouteTable2

  PrivateRouteAssociation2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: !Ref PrivateRouteTable2
      SubnetId: !Ref PrivateSubnet2


Outputs:
  mvVPCname:
    Description: myvpc of udacity project
    Value: !Ref myVPC
    Export:
      Name: !Sub "${EnvironmentName}-VPCID1"

  Public1:
    Description: publicsubnet 1 of udacity project
    Value: !Ref PublicSubnet1
    Export:
      Name: !Sub "${EnvironmentName}-PBL1"

  Public2:
    Description: publicsubnet 2 of udacity project
    Value: !Ref PublicSubnet2
    Export:
      Name: !Sub "${EnvironmentName}-PBL2"

  Private1:
    Description: privatesubnet 1 of udacity project
    Value: !Ref PrivateSubnet1
    Export:
      Name: !Sub "${EnvironmentName}-PRV1"

  Private2:
    Description: privatesubnet 2 of udacity project
    Value: !Ref PrivateSubnet2
    Export:
      Name: !Sub "${EnvironmentName}-PRV2"


  


  

  








    


  
  



  
